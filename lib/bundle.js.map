{"version":3,"sources":["webpack:///webpack/bootstrap d11ee3038edb69566e52","webpack:///./lib/EnGarde.js","webpack:///./lib/Game.js","webpack:///./lib/Arena.js","webpack:///./lib/Player.js","webpack:///./lib/Sword.js","webpack:///./lib/GameView.js","webpack:///./lib/KeyBindings.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH,EAAC;;;;;;;AC7BD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,wBAAuB;AACvB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;;;;;;ACnUA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;;AAEA;;AAEA;;;;;;;ACtDA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,IAAG;;AAEH;AACA;;;;AAIA;;;;;;;AClIA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;ACpGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap d11ee3038edb69566e52\n **/","const Game = require('./Game');\nconst GameView = require('./GameView');\nconst KeyBindings = require('./KeyBindings');\n\ndocument.addEventListener(\"DOMContentLoaded\", function(){\n  const canvasEl = document.getElementsByTagName(\"canvas\")[0];\n  canvasEl.width = Game.DIM_X;\n  canvasEl.height = Game.DIM_Y;\n\n  const ctx = canvasEl.getContext(\"2d\");\n  const game = new Game();\n  new GameView(game, ctx).start();\n\n  $(\".modal-window\").click(function () {\n    $(\".modal-window\").addClass(\"vanish\");\n    $(\".modal-background\").addClass(\"vanish\");\n    game.start();\n  });\n\n  $(\"body\").keypress(function (e) {\n    var action = KeyBindings[e.keyCode];\n    if (e.keyCode === 49 || e.keyCode === 50) {\n      game.toggleAI(e.keyCode);\n    }\n    if (action && game.roundActive) {\n      game.actionLog(action);\n      game.readyToAdvance();\n    }\n  });\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/EnGarde.js\n ** module id = 0\n ** module chunks = 0\n **/","const Arena = require('./Arena');\nconst Player = require('./Player');\n\nconst Game = function () {\n  this.score = [];\n  this.roundActive = false;\n  this.arena = new Arena ();\n  this.playerOne = new Player ([250, 325], \"Player 1\", \"RIGHT\");\n  this.playerTwo = new Player ([750, 325], \"Player 2\", \"LEFT\");\n  this.aiActive = false;\n};\n\nGame.BG_COLOR = \"#A6AAAB\";\nGame.DIM_X = 1000;\nGame.DIM_Y = 600;\n\nNumber.prototype.between = function(a, b) {\n  var min = Math.min.apply(Math, [a, b]),\n    max = Math.max.apply(Math, [a, b]);\n  return this > min && this < max;\n};\n\nfunction collision(posOne, posTwo) {\n  return ((posOne[0].between(posTwo[0] - 50, posTwo[0] + 50)) && (posOne[1].between(posTwo[1] - 50, posTwo[1] + 50)));\n}\n\nvar UNDO = {\n  \"UP\" : \"DOWN\",\n  \"DOWN\" : \"UP\",\n  \"LEFT\" : \"RIGHT\",\n  \"RIGHT\" : \"LEFT\"\n};\n\nGame.prototype.start = function () {\n  this.playerOne.livesRemaining = 3;\n  this.playerTwo.livesRemaining = 3;\n  this.playRound();\n};\n\nGame.prototype.playRound = function () {\n  this.roundActive = true;\n};\n\nGame.prototype.readyToAdvance = function () {\n  if (this.playerOne.ready && this.playerTwo.ready) {\n    this.evaluateMoves();\n\n  }\n\n};\n\nGame.prototype.toggleAI = function (keycode) {\n  if (keycode === 49) {\n    this.playerOne.switchPlayMode();\n  } else {\n    this.playerTwo.switchPlayMode();\n  }\n  if (!this.aiActive) {this.initializeAI();}\n};\n\nGame.prototype.initializeAI = function () {\n  window.setInterval(this.readyToAdvance.bind(this), 1000);\n  this.aiActive = true;\n};\n\nGame.prototype.evaluateMoves = function () {\n  this.roundActive = false;\n  var pOne = this.playerOne;\n  var pTwo = this.playerTwo;\n\n  var pOneMoves = [];\n  var pTwoMoves = [];\n\n  var turnsInterval = setInterval(function() {\n    if (pOne.actions.length === 0) {\n      if (collision(pOne.position, pTwo.position)) {\n        pOne.move(UNDO[pOneMoves[pOneMoves.length - 1]], true);\n        pTwo.move(UNDO[pTwoMoves[pTwoMoves.length - 1]], true);\n        pOne.reset();\n        pTwo.reset();\n      }\n      pOne.reset();\n      pTwo.reset();\n      this.roundActive = true;\n      window.clearInterval(turnsInterval);\n    } else {\n      pOneMoves.push(pOne.actions.shift().slice(3));\n      pTwoMoves.push(pTwo.actions.shift().slice(3));\n      var pOneLastMove = pOneMoves[pOneMoves.length - 1];\n      var pTwoLastMove = pTwoMoves[pTwoMoves.length - 1];\n      pOne.move(pOneLastMove);\n      pTwo.move(pTwoLastMove);\n      if (collision(pOne.position, pTwo.position)) {\n        pOne.move(UNDO[pOneMoves[pOneMoves.length - 2]], true);\n        pTwo.move(UNDO[pTwoMoves[pTwoMoves.length - 2]], true);\n        pOne.reset();\n        pTwo.reset();\n      }\n      if (pOneLastMove === 'JAB' || pTwoLastMove === 'JAB') {\n        var pOneSwordPosDistant;\n        var pOneSwordPosClose;\n        var pTwoSwordPosDistant;\n        var pTwoSwordPosClose;\n        switch (pOne.facing) {\n          case 'UP':\n            pOneSwordPosDistant = [pOne.position[0], pOne.position[1] - 128];\n            pOneSwordPosClose = [pOne.position[0], pOne.position[1] - 64];\n            break;\n          case 'DOWN':\n            pOneSwordPosDistant = [pOne.position[0], pOne.position[1] + 128];\n            pOneSwordPosClose = [pOne.position[0], pOne.position[1] + 64];\n            break;\n          case 'LEFT':\n            pOneSwordPosDistant = [pOne.position[0] - 172, pOne.position[1]];\n            pOneSwordPosClose = [pOne.position[0] - 86, pOne.position[1]];\n            break;\n          case 'RIGHT':\n            pOneSwordPosDistant = [pOne.position[0] + 172, pOne.position[1]];\n            pOneSwordPosClose = [pOne.position[0] + 86, pOne.position[1]];\n            break;\n        }\n        switch (pTwo.facing) {\n          case 'UP':\n            pTwoSwordPosDistant = [pTwo.position[0], pTwo.position[1] - 128];\n            pTwoSwordPosClose = [pTwo.position[0], pTwo.position[1] - 64];\n            break;\n          case 'DOWN':\n            pTwoSwordPosDistant = [pTwo.position[0], pTwo.position[1] + 128];\n            pTwoSwordPosClose = [pTwo.position[0], pTwo.position[1] + 64];\n            break;\n          case 'LEFT':\n            pTwoSwordPosDistant = [pTwo.position[0] - 172, pTwo.position[1]];\n            pTwoSwordPosClose = [pTwo.position[0] - 86, pTwo.position[1]];\n            break;\n          case 'RIGHT':\n            pTwoSwordPosDistant = [pTwo.position[0] + 172, pTwo.position[1]];\n            pTwoSwordPosClose = [pTwo.position[0] + 86, pTwo.position[1]];\n            break;\n        }\n        if ((collision(pOneSwordPosDistant , pTwo.position) && !collision(pTwoSwordPosDistant, pOne.position)) ||\n            (collision(pOneSwordPosClose , pTwo.position) && !collision(pTwoSwordPosClose, pOne.position))){\n          this.roundActive = false;\n          window.clearInterval(turnsInterval);\n          setTimeout(this.resetBoard.bind(this, pTwo), 1000);\n        } else if ((!collision(pOneSwordPosDistant , pTwo.position) && collision(pTwoSwordPosDistant, pOne.position)) ||\n            (!collision(pOneSwordPosClose , pTwo.position) && collision(pTwoSwordPosClose, pOne.position))) {\n          this.roundActive = false;\n          window.clearInterval(turnsInterval);\n          setTimeout(this.resetBoard.bind(this, pOne), 1000);\n        }\n      }\n      if (pOneLastMove === 'SLASH' || pTwoLastMove === 'SLASH') {\n        var pOneSwordPosLeft;\n        var pOneSwordPosMid;\n        var pOneSwordPosRight;\n        var pTwoSwordPosLeft;\n        var pTwoSwordPosMid;\n        var pTwoSwordPosRight;\n        switch (pOne.facing) {\n          case 'UP':\n            pOneSwordPosLeft = [pOne.position[0] - 86, pOne.position[1] - 64];\n            pOneSwordPosMid = [pOne.position[0], pOne.position[1] - 64];\n            pOneSwordPosRight = [pOne.position[0] + 86, pOne.position[1] - 64];\n            break;\n          case 'DOWN':\n            pOneSwordPosLeft = [pOne.position[0] + 86, pOne.position[1] + 64];\n            pOneSwordPosMid = [pOne.position[0], pOne.position[1] + 64];\n            pOneSwordPosRight = [pOne.position[0] - 86, pOne.position[1] + 64];\n            break;\n          case 'LEFT':\n            pOneSwordPosLeft = [pOne.position[0] - 86, pOne.position[1] - 64];\n            pOneSwordPosMid = [pOne.position[0] - 86, pOne.position[1]];\n            pOneSwordPosRight = [pOne.position[0] - 86, pOne.position[1] + 64];\n            break;\n          case 'RIGHT':\n            pOneSwordPosLeft = [pOne.position[0] + 86, pOne.position[1] + 64];\n            pOneSwordPosMid = [pOne.position[0] + 86, pOne.position[1]];\n            pOneSwordPosRight = [pOne.position[0] + 86, pOne.position[1] - 64];\n            break;\n        }\n        switch (pTwo.facing) {\n          case 'UP':\n            pTwoSwordPosLeft = [pTwo.position[0] - 86, pTwo.position[1] - 64];\n            pTwoSwordPosMid = [pTwo.position[0], pTwo.position[1] - 64];\n            pTwoSwordPosRight = [pTwo.position[0] + 86, pTwo.position[1] - 64];\n            break;\n          case 'DOWN':\n            pTwoSwordPosLeft = [pTwo.position[0] + 86, pTwo.position[1] + 64];\n            pTwoSwordPosMid = [pTwo.position[0], pTwo.position[1] + 64];\n            pTwoSwordPosRight = [pTwo.position[0] - 86, pTwo.position[1] + 64];\n            break;\n          case 'LEFT':\n            pTwoSwordPosLeft = [pTwo.position[0] - 86, pTwo.position[1] - 64];\n            pTwoSwordPosMid = [pTwo.position[0] - 86, pTwo.position[1]];\n            pTwoSwordPosRight = [pTwo.position[0] - 86, pTwo.position[1] + 64];\n            break;\n          case 'RIGHT':\n            pTwoSwordPosLeft = [pTwo.position[0] + 86, pTwo.position[1] + 64];\n            pTwoSwordPosMid = [pTwo.position[0] + 86, pTwo.position[1]];\n            pTwoSwordPosRight = [pTwo.position[0] + 86, pTwo.position[1] - 64];\n            break;\n        }\n        if ((collision(pOneSwordPosLeft , pTwo.position) && !collision(pTwoSwordPosLeft, pOne.position)) ||\n            (collision(pOneSwordPosMid , pTwo.position) && !collision(pTwoSwordPosMid, pOne.position)) ||\n            (collision(pOneSwordPosRight , pTwo.position) && !collision(pTwoSwordPosRight, pOne.position))){\n          this.roundActive = false;\n          window.clearInterval(turnsInterval);\n          setTimeout(this.resetBoard.bind(this, pTwo), 1000);\n        } else if ((!collision(pOneSwordPosLeft , pTwo.position) && collision(pTwoSwordPosLeft, pOne.position)) ||\n            (!collision(pOneSwordPosMid , pTwo.position) && collision(pTwoSwordPosMid, pOne.position)) ||\n            (!collision(pOneSwordPosRight , pTwo.position) && collision(pTwoSwordPosRight, pOne.position))) {\n          this.roundActive = false;\n          window.clearInterval(turnsInterval);\n          setTimeout(this.resetBoard.bind(this, pOne), 1000);\n        }\n      }\n    }\n  }.bind(this), 600);\n\n};\n\nGame.prototype.resetBoard = function (player) {\n  player.livesRemaining -= 1;\n  this.playerOne.position = [250, 325];\n  this.playerOne.facing = 'RIGHT';\n  this.playerOne.ready = false;\n  this.playerOne.actions = [];\n  this.playerTwo.position = [750, 325];\n  this.playerTwo.facing = 'LEFT';\n  this.playerTwo.ready = false;\n  this.playerTwo.actions = [];\n  if (this.playerOne.livesRemaining === 0 || this.playerTwo.livesRemaining === 0) {\n    this.winner((this.playerOne.livesRemaining === 0) ? this.playerTwo : this.playerOne);\n  } else {\n    this.roundActive = true;\n  }\n};\n\nGame.prototype.winner = function (winner) {\n  $(\".modal-background\").toggleClass(\"vanish\")\n    .append('<div class=\"modal-window\"><h1>' + winner.name +' is victorious!</h1></div>');\n\n  $(\".modal-window\").click(function () {\n    $(\".modal-background\").toggleClass(\"vanish\");\n    $(\".modal-window\").addClass(\"vanish\");\n    setTimeout(this.start.bind(this), 1000);\n  }.bind(this));\n};\n\nGame.prototype.actionLog = function (action) {\n  if (action.slice(1,2) === '1') {\n    if (this.playerOne.mode === 'HUMAN') this.playerOne.logAction(action);\n  } else {\n    if (this.playerTwo.mode === 'HUMAN') this.playerTwo.logAction(action);\n  }\n};\n\nGame.prototype.draw = function (ctx) {\n  ctx.clearRect(0, 0, Game.DIM_X, Game.DIM_Y);\n  ctx.fillStyle = Game.BG_COLOR;\n  ctx.fillRect(0, 0, Game.DIM_X, Game.DIM_Y);\n  this.arena.draw(ctx);\n  this.playerOne.draw(ctx);\n  this.playerTwo.draw(ctx);\n\n  ctx.font = \"40px serif\";\n  ctx.fillText(this.playerOne.name, 30, 90);\n  ctx.fillText(this.playerTwo.name, 830, 90);\n\n  ctx.font = \"italic 50px serif\";\n  ctx.fillStyle = \"#292929\";\n  ctx.fillText(\"En Garde\", 400, 60);\n\n  if (this.playerOne.livesRemaining < 3) this.drawPlayerStanding(ctx, this.playerOne);\n  if (this.playerTwo.livesRemaining < 3) this.drawPlayerStanding(ctx, this.playerTwo);\n};\n\nGame.prototype.drawPlayerStanding = function (ctx, player) {\n  var offset;\n  if (player === this.playerOne) {\n    offset = [25, 100];\n  } else if (player === this.playerTwo) {\n    offset = [825, 100];\n  }\n\n  var drawSlash = function(cntx, offSet) {\n    cntx.save();\n    cntx.translate(offSet[0], offSet[1]);\n    cntx.beginPath();\n    cntx.lineWidth = 2;\n    cntx.strokeStyle = '#000000';\n    cntx.moveTo(25, 50);\n    cntx.lineTo(125, 75);\n    cntx.stroke();\n\n    cntx.fillStyle = '#a2a2a2';\n    cntx.beginPath();\n    cntx.moveTo(25, 50);\n    cntx.lineTo(126, 76);\n    cntx.lineTo(35, 80);\n    cntx.lineTo(25, 50);\n    cntx.fill();\n\n    cntx.restore();\n  };\n  // draw first slash\n  drawSlash(ctx, offset);\n\n  if (player.livesRemaining < 2) {\n    //draw second slash\n    offset[1] += 60;\n    drawSlash(ctx, offset);\n  }\n\n  if (player.livesRemaining < 1) {\n    // draw third slash\n    offset[1] += 60;\n    drawSlash(ctx, offset);\n\n  }\n\n};\n\nmodule.exports = Game;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/Game.js\n ** module id = 1\n ** module chunks = 0\n **/","const Arena = function () {\n};\n\nArena.BG_COLOR = \"#faf0b1\";\nArena.DIM_X = 600;\nArena.DIM_Y = 450;\n\n// check for players moving within bounds and not colliding.\n\nArena.prototype.draw = function (ctx) {\n  // draw arena\n  ctx.fillStyle = Arena.BG_COLOR;\n  ctx.fillRect(200, 100, Arena.DIM_X, Arena.DIM_Y);\n\n  // draw banner\n  ctx.fillStyle = \"#F5F3F0\";\n  ctx.beginPath();\n  ctx.moveTo(25, 100);\n  ctx.lineTo(175, 100);\n  ctx.lineTo(175, 500);\n  ctx.lineTo(100, 425);\n  ctx.lineTo(25, 500);\n  ctx.lineTo(25, 100);\n  ctx.fill();\n\n  ctx.beginPath();\n  ctx.moveTo(825, 100);\n  ctx.lineTo(975, 100);\n  ctx.lineTo(975, 500);\n  ctx.lineTo(900, 425);\n  ctx.lineTo(825, 500);\n  ctx.lineTo(825, 100);\n  ctx.fill();\n\n  // draw controls\n\n  ctx.save();\n  ctx.translate(20, 550);\n  ctx.font = \"18px serif\";\n  ctx.fillStyle = \"#1c1c1c\";\n  ctx.fillText(\"W A S D keys to move\", 0, 0);\n  ctx.fillText(\"Q to Slash, E to Jab\",10, 20);\n  ctx.restore();\n\n  ctx.save();\n  ctx.translate(825, 550);\n  ctx.font = \"18px serif\";\n  ctx.fillStyle = \"#2e0b0b\";\n  ctx.fillText(\"P L ; ' keys to move\", 5, 0);\n  ctx.fillText(\"O to Slash, [ to Jab\",10, 20);\n  ctx.restore();\n\n};\n\nmodule.exports = Arena;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/Arena.js\n ** module id = 2\n ** module chunks = 0\n **/","const Sword = require('./Sword');\n\nconst Player = function (pos, name, facing) {\n  this.position = pos || [500, 300];\n  this.mode = 'HUMAN';\n  this.facing = facing;\n  this.name = name;\n  this.ready = false;\n  this.actions = [];\n  this.livesRemaining = 3;\n  this.color = \"#\" + pos[0] + pos[1];\n  this.sword = new Sword (this);\n};\n\nPlayer.V_MOVE = 450 / 7;\nPlayer.H_MOVE = 600 / 7;\n\nvar randomAction = function () {\n  var actions = [\"AI_UP\", \"AI_DOWN\", \"AI_LEFT\", \"AI_RIGHT\", \"AI_JAB\", \"AI_SLASH\"];\n  return actions[Math.floor(Math.random() * actions.length)];\n};\n\nPlayer.prototype.logAction = function (action) {\n  this.actions.length < 4 ? this.actions.push(action) : null;\n  this.actions.length === 4 ? this.ready = true : null;\n};\n\nPlayer.prototype.aiPrepare = function () {\n  if (!this.ready) {\n    while (this.actions.length < 4 && this.ready === false && this.mode === 'AI') {\n      this.actions.push(randomAction());\n    }\n    this.ready = true;\n  }\n};\n\nPlayer.prototype.reset = function () {\n  this.ready = false;\n  this.actions = [];\n};\n\nPlayer.prototype.validY = function (coord) {\n  return (coord < 550 && coord > 100);\n};\n\nPlayer.prototype.validX = function (coord) {\n  return (coord < 800 && coord > 200);\n};\n\nPlayer.prototype.move = function (direction) {\n  var x = this.position[0];\n  var y = this.position[1];\n  var collision = [].slice.call(arguments, 1)[0];\n\n  switch (direction) {\n    case 'UP':\n      this.validY(y - Player.V_MOVE) ? this.animate(1, (y - Player.V_MOVE), 500) : null;\n      collision ? null : this.facing = \"UP\";\n      break;\n    case 'DOWN':\n      this.validY(y + Player.V_MOVE) ? this.animate(1, (y + Player.V_MOVE), 500) : null;\n      collision ? null : this.facing = \"DOWN\";\n      break;\n    case 'LEFT':\n      this.validX(x - Player.H_MOVE) ? this.animate(0, (x - Player.H_MOVE), 500) : null;\n      collision ? null : this.facing = \"LEFT\";\n      break;\n    case 'RIGHT':\n      this.validX(x + Player.H_MOVE) ? this.animate(0, (x + Player.H_MOVE), 500) : null;\n      collision ? null : this.facing = \"RIGHT\";\n      break;\n    case 'JAB':\n      // jab\n      this.sword.jab();\n      break;\n    case 'SLASH':\n      // slash\n      this.sword.slash();\n      break;\n  }\n\n};\n\nPlayer.prototype.switchPlayMode = function () {\n  if (this.mode === 'HUMAN') {\n    this.mode = 'AI';\n    this.name = \"Ai\";\n    this.aiInterval = window.setInterval(this.aiPrepare.bind(this), 1000);\n  } else {\n    this.mode = 'HUMAN';\n    this.name = 'Human';\n    window.clearInterval(this.aiInterval);\n  }\n};\n\nPlayer.prototype.draw = function (ctx) {\n  ctx.fillStyle = this.color;\n  ctx.beginPath();\n  ctx.arc(\n    this.position[0],\n    this.position[1],\n    20,\n    0,\n    (Math.PI+(Math.PI*2)/2),\n    false);\n  ctx.fill();\n  this.sword.draw(ctx);\n};\n\n\nPlayer.prototype.animate = function(prop, val, duration) {\n  var start = new Date().getTime();\n  var end = start + duration;\n  var current = this.position[prop];\n  var distance = val - current;\n\n  var step = function() {\n    var timestamp = new Date().getTime();\n    var progress = Math.min((duration - (end - timestamp)) / duration, 1);\n\n    this.position[prop] = current + (distance * progress);\n\n    if (progress < 1) requestAnimationFrame(step);\n  }.bind(this);\n\n  return step();\n};\n\n\n\nmodule.exports = Player;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/Player.js\n ** module id = 3\n ** module chunks = 0\n **/","const Sword = function (player) {\n  this.player = player;\n  this.jabbing = false;\n  this.slashing = false;\n  this.color = \"#b3b3b3\";\n  this.swordOrds = null;\n};\n\nSword.prototype.jab = function () {\n  this.jabbing = true;\n\n  this.animate(1, -200, 300);\n};\n\nSword.prototype.slash = function () {\n  this.slashing = true;\n\n  this.animate(1, 50, 300);\n};\n\nSword.prototype.animate = function (prop, val, duration) {\n  // The calculations required for the step function\n  var start = new Date().getTime();\n  var end = start + duration;\n  var current = this.swordOrds[prop][prop];\n  var distance = val - current;\n\n  var step = function() {\n    // Get our current progress\n    var timestamp = new Date().getTime();\n    var progress = Math.min((duration - (end - timestamp)) / duration, 1);\n\n    // Update the this.swordOrds[prop][prop] property\n    this.swordOrds[prop][prop] = current + (distance * progress);\n\n    // If the animation hasn't finished, repeat the step.\n    if (progress < 1) {\n      requestAnimationFrame(step);\n    } else {\n      this.jabbing = false;\n      this.slashing = false;\n    }\n  }.bind(this);\n\n  // Start the animation\n  return step();\n};\n\nSword.prototype.draw = function (ctx) {\n  var playerX = this.player.position[0];\n  var playerY = this.player.position[1];\n  var facing = this.player.facing;\n  var facingAdjustment;\n  var half = Math.PI/2;\n\n  switch (facing) {\n    case 'UP':\n      facingAdjustment = 0;\n      break;\n    case 'DOWN':\n      facingAdjustment = half * 2;\n      break;\n    case 'LEFT':\n      facingAdjustment = half * 3;\n      break;\n    case 'RIGHT':\n      facingAdjustment = half;\n      break;\n  }\n\n  var swordStart;\n  var swordLine;\n\n  if (this.slashing) {\n    // ords for beginning sword slash\n    swordStart = [-5, -18];\n    swordLine = [-40, -50];\n  } else if (this.jabbing) {\n    // ords for jabbing\n    swordStart = [0, -20];\n    swordLine = [0, -60];\n  } else {\n    swordStart = [15, -5];\n    swordLine = [0, -40];\n  }\n\n  ctx.save();\n  ctx.translate(playerX, playerY);\n  ctx.rotate(facingAdjustment);\n  ctx.beginPath();\n  ctx.lineWidth = 2;\n  ctx.strokeStyle = this.color;\n  ctx.moveTo(swordStart[0], swordStart[1]);\n  ctx.lineTo(swordLine[0], swordLine[1]);\n  ctx.stroke();\n  ctx.restore();\n\n  this.swordOrds = [swordStart, swordLine];\n};\n\nmodule.exports = Sword;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/Sword.js\n ** module id = 4\n ** module chunks = 0\n **/","const GameView = function(game, ctx) {\n  this.ctx = ctx;\n  this.game = game;\n};\n\nGameView.prototype.start = function () {\n  requestAnimationFrame(this.animate.bind(this));\n};\n\nGameView.prototype.animate = function(time){\n  this.game.draw(this.ctx);\n  requestAnimationFrame(this.animate.bind(this));\n};\n\nmodule.exports = GameView;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/GameView.js\n ** module id = 5\n ** module chunks = 0\n **/","module.exports = {\n  97: \"P1_LEFT\",\n  115: \"P1_DOWN\",\n  100: \"P1_RIGHT\",\n  119: \"P1_UP\",\n  101: \"P1_JAB\",\n  113: \"P1_SLASH\",\n  108: \"P2_LEFT\",\n  59: \"P2_DOWN\",\n  39: \"P2_RIGHT\",\n  112: \"P2_UP\",\n  91: \"P2_JAB\",\n  111: \"P2_SLASH\"\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/KeyBindings.js\n ** module id = 6\n ** module chunks = 0\n **/"],"sourceRoot":""}