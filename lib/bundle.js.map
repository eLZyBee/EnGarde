{"version":3,"sources":["webpack:///webpack/bootstrap 724006ea89c5d3f8cfb7","webpack:///./lib/EnGarde.js","webpack:///./lib/Game.js","webpack:///./lib/Arena.js","webpack:///./lib/Player.js","webpack:///./lib/GameView.js","webpack:///./lib/KeyBindings.js","webpack:///./lib/Sword.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH,EAAC;;;;;;;AC5BD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACzGA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AClCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;AACA;;;;AAIA;;;;;;;AC9GA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACbA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 724006ea89c5d3f8cfb7\n **/","const Game = require('./Game');\nconst GameView = require('./GameView');\nconst KeyBindings = require('./KeyBindings');\n\ndocument.addEventListener(\"DOMContentLoaded\", function(){\n  const canvasEl = document.getElementsByTagName(\"canvas\")[0];\n  canvasEl.width = Game.DIM_X;\n  canvasEl.height = Game.DIM_Y;\n\n  const ctx = canvasEl.getContext(\"2d\");\n  const game = new Game();\n  new GameView(game, ctx).start();\n\n  $(\".modal-window\").click(function () {\n    $(\".modal-window\").addClass(\"vanish\");\n    $(\".modal-background\").addClass(\"vanish\");\n    game.start();\n  });\n\n  $(\"body\").keypress(function (e) {\n    var action = KeyBindings[e.keyCode];\n    if (action && game.roundActive) {\n      game.actionLog(action);\n      if (game.readyToAdvance()) {\n          game.evaluateMoves();\n      }\n    }\n  });\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/EnGarde.js\n ** module id = 0\n ** module chunks = 0\n **/","const Arena = require('./Arena');\nconst Player = require('./Player');\n\nconst Game = function () {\n  this.score = [];\n  this.roundActive = false;\n  this.arena = new Arena ();\n  this.playerOne = new Player ([250, 325], \"Player 1\", \"RIGHT\");\n  this.playerTwo = new Player ([750, 325], \"Player 2\", \"LEFT\");\n};\n\nGame.BG_COLOR = \"#A6AAAB\";\nGame.DIM_X = 1000;\nGame.DIM_Y = 600;\n\nNumber.prototype.between = function(a, b) {\n  var min = Math.min.apply(Math, [a, b]),\n    max = Math.max.apply(Math, [a, b]);\n  return this > min && this < max;\n};\n\nfunction collision(posOne, posTwo) {\n  return ((posOne[0].between(posTwo[0] - 50, posTwo[0] + 50)) && (posOne[1].between(posTwo[1] - 50, posTwo[1] + 50)));\n}\n\nvar UNDO = {\n  \"UP\" : \"DOWN\",\n  \"DOWN\" : \"UP\",\n  \"LEFT\" : \"RIGHT\",\n  \"RIGHT\" : \"LEFT\"\n};\n\nGame.prototype.start = function () {\n  this.playRound();\n};\n\nGame.prototype.playRound = function () {\n  this.roundActive = true;\n};\n\nGame.prototype.readyToAdvance = function () {\n  return (this.playerOne.ready && this.playerTwo.ready);\n};\n\nGame.prototype.evaluateMoves = function () {\n  console.log('evaluating');\n  this.roundActive = false;\n  var pOne = this.playerOne;\n  var pTwo = this.playerTwo;\n\n  var pOneMoves = [];\n  var pTwoMoves = [];\n\n  var turnsInterval = setInterval(function() {\n    if (pOne.actions.length === 0) {\n      if (collision(pOne.position, pTwo.position)) {\n        console.log(\"Ahh, Collision!\");\n        pOne.move(UNDO[pOneMoves[pOneMoves.length - 1]], true);\n        pTwo.move(UNDO[pTwoMoves[pTwoMoves.length - 1]], true);\n        pOne.reset();\n        pTwo.reset();\n      }\n      pOne.reset();\n      pTwo.reset();\n      this.roundActive = true;\n      window.clearInterval(turnsInterval);\n    } else {\n      pOneMoves.push(pOne.actions.shift().slice(3));\n      pTwoMoves.push(pTwo.actions.shift().slice(3));\n      pOne.move(pOneMoves[pOneMoves.length - 1]);\n      pTwo.move(pTwoMoves[pTwoMoves.length - 1]);\n      if (collision(pOne.position, pTwo.position)) {\n        console.log(\"Ahh, Collision!\");\n        pOne.move(UNDO[pOneMoves[pOneMoves.length - 2]], true);\n        pTwo.move(UNDO[pTwoMoves[pTwoMoves.length - 2]], true);\n        pOne.reset();\n        pTwo.reset();\n      }\n    }\n  }.bind(this), 600);\n\n};\n\nGame.prototype.winner = function () {\n  //place holder\n  return false;\n};\n\nGame.prototype.actionLog = function (action) {\n  if (action.slice(1,2) === '1') {\n    this.playerOne.logAction(action);\n  } else {\n    this.playerTwo.logAction(action);\n  }\n};\n\nGame.prototype.draw = function (ctx) {\n  ctx.clearRect(0, 0, Game.DIM_X, Game.DIM_Y);\n  ctx.fillStyle = Game.BG_COLOR;\n  ctx.fillRect(0, 0, Game.DIM_X, Game.DIM_Y);\n  this.arena.draw(ctx);\n  this.playerOne.draw(ctx);\n  this.playerTwo.draw(ctx);\n};\n\nmodule.exports = Game;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/Game.js\n ** module id = 1\n ** module chunks = 0\n **/","const Arena = function () {\n};\n\nArena.BG_COLOR = \"#faf0b1\";\nArena.DIM_X = 600;\nArena.DIM_Y = 450;\n\n// check for players moving within bounds and not colliding.\n\nArena.prototype.draw = function (ctx) {\n  // draw arena\n  ctx.fillStyle = Arena.BG_COLOR;\n  ctx.fillRect(200, 100, Arena.DIM_X, Arena.DIM_Y);\n  // draw banner\n  ctx.fillStyle = \"#F5F3F0\";\n  ctx.beginPath();\n  ctx.moveTo(25, 100);\n  ctx.lineTo(175, 100);\n  ctx.lineTo(175, 500);\n  ctx.lineTo(100, 425);\n  ctx.lineTo(25, 500);\n  ctx.lineTo(25, 100);\n  ctx.fill();\n\n  ctx.beginPath();\n  ctx.moveTo(825, 100);\n  ctx.lineTo(975, 100);\n  ctx.lineTo(975, 500);\n  ctx.lineTo(900, 425);\n  ctx.lineTo(825, 500);\n  ctx.lineTo(825, 100);\n  ctx.fill();\n};\n\nmodule.exports = Arena;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/Arena.js\n ** module id = 2\n ** module chunks = 0\n **/","const Sword = require('./Sword');\n\nconst Player = function (pos, name, facing) {\n  this.position = pos || [500, 300];\n  this.facing = facing;\n  this.name = name;\n  this.ready = false;\n  this.actions = [];\n  this.livesRemaining = 3;\n  this.color = \"#\" + pos[0] + pos[1];\n  this.sword = new Sword (this);\n};\n\nPlayer.V_MOVE = 450 / 7;\nPlayer.H_MOVE = 600 / 7;\n\n\nPlayer.prototype.logAction = function (action) {\n  this.actions.length < 4 ? this.actions.push(action) : console.log(this.name + \" is out of moves\");\n  this.actions.length === 4 ? this.ready = true : null;\n};\n\nPlayer.prototype.reset = function () {\n  this.ready = false;\n  this.actions = [];\n};\n\nPlayer.prototype.validY = function (coord) {\n  return (coord < 550 && coord > 100);\n};\n\nPlayer.prototype.validX = function (coord) {\n  return (coord < 800 && coord > 200);\n};\n\nPlayer.prototype.move = function (direction) {\n  var x = this.position[0];\n  var y = this.position[1];\n  var collision = [].slice.call(arguments, 1)[0];\n\n  switch (direction) {\n    case 'UP':\n      this.validY(y - Player.V_MOVE) ? this.animate(1, (y - Player.V_MOVE), 500) : null;\n      collision ? null : this.facing = \"UP\";\n      break;\n    case 'DOWN':\n      this.validY(y + Player.V_MOVE) ? this.animate(1, (y + Player.V_MOVE), 500) : null;\n      collision ? null : this.facing = \"DOWN\";\n      break;\n    case 'LEFT':\n      this.validX(x - Player.H_MOVE) ? this.animate(0, (x - Player.H_MOVE), 500) : null;\n      collision ? null : this.facing = \"LEFT\";\n      break;\n    case 'RIGHT':\n      this.validX(x + Player.H_MOVE) ? this.animate(0, (x + Player.H_MOVE), 500) : null;\n      collision ? null : this.facing = \"RIGHT\";\n      break;\n    case 'JAB':\n      // jab\n      this.sword.jab();\n      break;\n    case 'SLASH':\n      // slash\n      this.sword.slash();\n      break;\n  }\n\n};\n\nPlayer.prototype.draw = function (ctx) {\n  ctx.fillStyle = this.color;\n  ctx.beginPath();\n  ctx.arc(\n    this.position[0],\n    this.position[1],\n    20,\n    0,\n    (Math.PI+(Math.PI*2)/2),\n    false);\n  ctx.fill();\n  this.sword.draw(ctx);\n};\n\n// animation\n\nPlayer.prototype.animate = function(prop, val, duration) {\n  // The calculations required for the step function\n  var start = new Date().getTime();\n  var end = start + duration;\n  var current = this.position[prop];\n  var distance = val - current;\n\n  var step = function() {\n    // Get our current progres\n    var timestamp = new Date().getTime();\n    var progress = Math.min((duration - (end - timestamp)) / duration, 1);\n\n    // Update the this.position's property\n    this.position[prop] = current + (distance * progress);\n\n    // If the animation hasn't finished, repeat the step.\n    if (progress < 1) requestAnimationFrame(step);\n  }.bind(this);\n\n  // Start the animation\n  return step();\n};\n\n\n\nmodule.exports = Player;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/Player.js\n ** module id = 3\n ** module chunks = 0\n **/","const GameView = function(game, ctx) {\n  this.ctx = ctx;\n  this.game = game;\n};\n\nGameView.prototype.start = function () {\n  requestAnimationFrame(this.animate.bind(this));\n};\n\nGameView.prototype.animate = function(time){\n  this.game.draw(this.ctx);\n  requestAnimationFrame(this.animate.bind(this));\n};\n\nmodule.exports = GameView;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/GameView.js\n ** module id = 4\n ** module chunks = 0\n **/","module.exports = {\n  97: \"P1_LEFT\",\n  115: \"P1_DOWN\",\n  100: \"P1_RIGHT\",\n  119: \"P1_UP\",\n  101: \"P1_JAB\",\n  113: \"P1_SLASH\",\n  108: \"P2_LEFT\",\n  59: \"P2_DOWN\",\n  39: \"P2_RIGHT\",\n  112: \"P2_UP\",\n  91: \"P2_JAB\",\n  111: \"P2_SLASH\"\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/KeyBindings.js\n ** module id = 5\n ** module chunks = 0\n **/","const Sword = function (player) {\n  this.player = player;\n  this.color = \"#b3b3b3\";\n};\n\nSword.prototype.jab = function () {\n  \n};\n\nSword.prototype.slash = function () {\n\n};\n\nSword.prototype.draw = function (ctx) {\n  var playerX = this.player.position[0];\n  var playerY = this.player.position[1];\n  var facing = this.player.facing;\n  var facingAdjustment;\n  var half = Math.PI/2;\n\n  switch (facing) {\n    case 'UP':\n      facingAdjustment = 0;\n      break;\n    case 'DOWN':\n      facingAdjustment = half * 2;\n      break;\n    case 'LEFT':\n      facingAdjustment = half * 3;\n      break;\n    case 'RIGHT':\n      facingAdjustment = half;\n      break;\n  }\n\n  ctx.save();\n  ctx.translate(playerX, playerY);\n  ctx.rotate(facingAdjustment);\n  ctx.beginPath();\n  ctx.lineWidth = 2;\n  ctx.strokeStyle = this.color;\n  ctx.moveTo(15, -5);\n  ctx.lineTo(0, -40);\n  ctx.stroke();\n  ctx.restore();\n};\n\nmodule.exports = Sword;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/Sword.js\n ** module id = 6\n ** module chunks = 0\n **/"],"sourceRoot":""}